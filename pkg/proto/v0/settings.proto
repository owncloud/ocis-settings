syntax = "proto3";

package proto;
option go_package = "pkg/proto/v0;proto";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/empty.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Settings"
    version: "1.0";
    contact: {
      name: "ownCloud GmbH";
      url: "https://github.com/owncloud/ocis-settings";
      email: "support@owncloud.com";
    };
    license: {
      name: "Apache-2.0";
      url: "https://github.com/owncloud/ocis-settings/blob/master/LICENSE";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  external_docs: {
    description: "Developer Manual";
    url: "http://owncloud.github.io/extensions/ocis_settings/";
  };
};

service BundleService {
  rpc SaveSettingsBundle(SaveSettingsBundleRequest) returns (SaveSettingsBundleResponse) {
    option (google.api.http) = {
      post: "/api/v0/settings/bundle-save",
      body: "*"
    };
  };
  rpc GetSettingsBundle(GetSettingsBundleRequest) returns (GetSettingsBundleResponse) {
    option (google.api.http) = {
      post: "/api/v0/settings/bundle-get",
      body: "*"
    };
  };
  rpc ListSettingsBundles(ListSettingsBundlesRequest) returns (ListSettingsBundlesResponse) {
    option (google.api.http) = {
      post: "/api/v0/settings/bundles-list",
      body: "*"
    };
  };
  rpc AddSettingToSettingsBundle(AddSettingToSettingsBundleRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v0/settings/bundles-add-setting",
      body: "*"
    };
  }
  rpc RemoveSettingFromSettingsBundle(RemoveSettingFromSettingsBundleRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v0/settings/bundles-remove-setting",
      body: "*"
    };
  }
}

service ValueService {
  rpc SaveSettingsValue(SaveSettingsValueRequest) returns (SaveSettingsValueResponse) {
    option (google.api.http) = {
      post: "/api/v0/settings/value-save",
      body: "*"
    };
  };
  rpc GetSettingsValue(GetSettingsValueRequest) returns (GetSettingsValueResponse) {
    option (google.api.http) = {
      post: "/api/v0/settings/value-get",
      body: "*"
    };
  };
  rpc ListSettingsValues(ListSettingsValuesRequest) returns (ListSettingsValuesResponse) {
    option (google.api.http) = {
      post: "/api/v0/settings/values-list",
      body: "*"
    };
  };
}

service RoleService {
  rpc ListRoleAssignments(ListRoleAssignmentsRequest) returns (UserRoleAssignments) {
    option (google.api.http) = {
      post: "/api/v0/settings/roles-list",
      body: "*"
    };
  }
  rpc AssignRoleToUser(AssignRoleToUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v0/settings/roles-assign",
      body: "*"
    };
  }
  rpc RemoveRoleFromUser(RemoveRoleFromUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v0/settings/roles-remove",
      body: "*"
    };
  }
}

// requests and responses for settings bundles
message SaveSettingsBundleRequest {
  SettingsBundle settings_bundle = 1;
}

message SaveSettingsBundleResponse {
  SettingsBundle settings_bundle = 1;
}

message GetSettingsBundleRequest {
  Identifier identifier = 1;
  Resource resource = 2;// if resource is nil, then the system wide settings bundle is to be fetched
}

message GetSettingsBundleResponse {
  SettingsBundle settings_bundle = 1;
}

message ListSettingsBundlesRequest {
  Identifier identifier = 1;
  Resource resource = 2;// if resource is nil, then the system wide settings bundle is to be fetched
}

message ListSettingsBundlesResponse {
  repeated SettingsBundle settings_bundles = 1;
}

message AddSettingToSettingsBundleRequest {
  Identifier identifier = 1;
  Resource resource = 2;
  Setting setting = 3;
}

message RemoveSettingFromSettingsBundleRequest {
  Identifier identifier = 1;
  Resource resource = 2;
}

// requests and responses for settings values
message SaveSettingsValueRequest {
  SettingsValue settings_value = 1;
}

message SaveSettingsValueResponse {
  SettingsValue settings_value = 1;
}

message GetSettingsValueRequest {
  Identifier identifier = 1;
  Resource resource = 2;// if resource is nil, then the default settings value is to be fetched (either user-specific or system wide)
}

message GetSettingsValueResponse {
  SettingsValue settings_value = 1;
}

message ListSettingsValuesRequest {
  Identifier identifier = 1;
  Resource resource = 2;// if resource is nil, then the default settings values are to be fetched (either user-specific or system wide)
}

message ListSettingsValuesResponse {
  repeated SettingsValue settings_values = 1;
}

// requests and responses for role assignments
message ListRoleAssignmentsRequest {
  RoleAssignmentIdentifier assignment = 1;
}

message AssignRoleToUserRequest {
  RoleAssignmentIdentifier assignment = 1;
}

message RemoveRoleFromUserRequest {
  RoleAssignmentIdentifier assignment = 1;
}

message RoleAssignmentIdentifier {
  string account_uuid = 1;
  string role = 2;
  Resource resource = 3;// if resource is nil, then the system side role assignment is to be fetched
}

// generic payloads
message Identifier {
  string extension = 1;
  string bundle = 2;
  string setting = 3;
  string account_uuid = 4;
}

enum ResourceType {
  UNKNOWN = 0;
  FILE = 1;
  SHARE = 2;
  SETTING = 3;
  USER = 4;
  GROUP = 5;
}

message Resource {
  ResourceType type = 1;
  string id = 2;// think about virtual ids like "me"
}

// payloads for settings bundles
message SettingsBundle {
  Identifier identifier = 1;
  string display_name = 2;
  repeated Setting settings = 3;
  // if resource is nil, then the settings bundle is system wide
  Resource resource = 4;
}

message Setting {
  string name = 1;
  string display_name = 2;
  string description = 3;
  oneof value {
    IntSetting int_value = 4;
    StringSetting string_value = 5;
    BoolSetting bool_value = 6;
    SingleChoiceListSetting single_choice_value = 7;
    MultiChoiceListSetting multi_choice_value = 8;
    PermissionSetting permission_value = 9;
  }
  // if resource is nil, then the setting is system wide
  Resource resource = 10;
}

message IntSetting {
  int64 default = 1;
  int64 min = 2;
  int64 max = 3;
  int64 step = 4;
  string placeholder = 5;
}

message StringSetting {
  string default = 1;
  bool required = 2;
  int32 min_length = 3;
  int32 max_length = 4;
  string placeholder = 5;
}

message BoolSetting {
  bool default = 1;
  string label = 2;
}

message SingleChoiceListSetting {
  repeated ListOption options = 1;
}

message MultiChoiceListSetting {
  repeated ListOption options = 1;
}

message ListOption {
  ListOptionValue value = 1;
  bool default = 2;
  string display_value = 3;
}

// a permission can be constructed by ADMIN users, by setting a resource, an operation and a constraint. need a new ui element for that.
message PermissionSetting {
  enum Operation {
    UNKNOWN = 0;
    CREATE = 1;
    READ = 2;
    UPDATE = 3;
    DELETE = 4;
  }
  Operation operation = 1;
  Constraint constraint = 2;
}

message Constraint {
  enum Type {
    UNKNOWN = 0;
    USER = 1;
    GROUP = 2;
  }
  Type type = 1;
  repeated string values = 2;
}

// payloads for settings values
message SettingsValue {
  Identifier identifier = 1;
  // if resource is nil, then the value is system wide
  Resource resource = 2;
  oneof value {
    bool bool_value = 3;
    int64 int_value = 4;
    string string_value = 5;
    ListValue list_value = 6;
  }
}

message ListValue {
  repeated ListOptionValue values = 1;
}

message ListOptionValue {
  oneof option {
    string string_value = 1;
    int64 int_value = 2;
  }
}

// only meant for serialization
message SettingsValues {
  map<string, SettingsValue> values = 1;
}
message UserRoleAssignments {
  repeated RoleAssignmentIdentifier assignments = 1;
}
